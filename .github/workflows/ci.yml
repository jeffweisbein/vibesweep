name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build
      run: npm run build
    
    - name: Run tests
      run: |
        echo "Running tests with Node ${{ matrix.node-version }}..."
        npm test || {
          exit_code=$?
          echo "Tests failed with exit code $exit_code"
          echo "Test output above may contain more details"
          exit $exit_code
        }
    
    - name: Run Vibesweep on itself
      run: |
        chmod +x dist/src/cli-enhanced.js
        echo "Running self-analysis..."
        node dist/src/cli-enhanced.js analyze . --pattern "src/**/*.ts" -f json -o self-analysis.json || {
          echo "Self-analysis failed with exit code $?"
          exit 1
        }
        
        if [ ! -f self-analysis.json ]; then
          echo "Error: self-analysis.json was not created"
          exit 1
        fi
        
        waste=$(cat self-analysis.json | jq '.wastePercentage')
        echo "Code waste: ${waste}%"
        
        # Fail if our own code is too wasteful (using awk instead of bc for better portability)
        if [ $(echo "$waste" | awk '{if ($1 > 50) print 1; else print 0}') -eq 1 ]; then
          echo "‚ùå Our own code waste exceeds 50%!"
          exit 1
        fi
    
    - name: Upload analysis report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: vibesweep-self-analysis-node-${{ matrix.node-version }}
        path: self-analysis.json

  publish:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'
    
    - run: npm ci
    - run: npm run build
    
    # Uncomment when ready to publish
    # - run: npm publish
    #   env:
    #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}